{"version":3,"file":"ripple.spec.js","sourceRoot":"","sources":["../../Users/arturkania/Documents/azimo/playground/material2/tmp/broccoli_type_script_compiler-input_base_path-xoMhTQg6.tmp/0/src/demo-app/core/ripple/ripple.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    describe,\n    it,\n    beforeEach,\n    afterEach,\n    inject,\n    async,\n    expect,\n} from '@angular/core/testing';\nimport {TestComponentBuilder, ComponentFixture} from '@angular/compiler/testing';\nimport {Component, ViewChild} from '@angular/core';\nimport {MdRipple} from './ripple';\n\n/** Creates a DOM event to indicate that a CSS transition for the given property ended. */\nconst createTransitionEndEvent = (propertyName: string) => {\n  // The \"new\" TransitionEvent constructor isn't available in anything except Firefox:\n  // https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\n  // So we just try to create a base event, and IE11 doesn't support that so we have to use\n  // the deprecated initTransitionEvent.\n  try {\n    const event = new Event('transitionend');\n    (<any>event).propertyName = propertyName;\n    return event;\n  } catch (e) {\n    const event = document.createEvent('TransitionEvent');\n    event.initTransitionEvent('transitionend',\n        false, /* canBubble */\n        false, /* cancelable */\n        propertyName,\n        0 /* elapsedTime */);\n    return event;\n  }\n};\n\n/** Creates a DOM mouse event. */\nconst createMouseEvent = (eventType: string, dict: any = {}) => {\n  // Ideally this would just be \"return new MouseEvent(eventType, dict)\". But IE11 doesn't support\n  // the MouseEvent constructor, and Edge inexplicably divides clientX and clientY by 100 to get\n  // pageX and pageY. (Really. After \"e = new MouseEvent('click', {clientX: 200, clientY: 300})\",\n  // e.clientX is 200, e.pageX is 2, e.clientY is 300, and e.pageY is 3.)\n  // So instead we use the deprecated createEvent/initMouseEvent API, which works everywhere.\n  const event = document.createEvent('MouseEvents');\n  event.initMouseEvent(eventType,\n      false, /* canBubble */\n      false, /* cancelable */\n      window, /* view */\n      0, /* detail */\n      dict.screenX || 0,\n      dict.screenY || 0,\n      dict.clientX || 0,\n      dict.clientY || 0,\n      false, /* ctrlKey */\n      false, /* altKey */\n      false, /* shiftKey */\n      false, /* metaKey */\n      0, /* button */\n      null /* relatedTarget */);\n  return event;\n};\n\n/** Extracts the numeric value of a pixel size string like '123px'.  */\nconst pxStringToFloat = (s: string) => {\n  return parseFloat(s.replace('px', ''));\n};\n\ndescribe('MdRipple', () => {\n  let builder: TestComponentBuilder;\n  let fixture: ComponentFixture<any>;\n  let rippleElement: HTMLElement;\n  let rippleBackground: Element;\n  let originalBodyMargin: string;\n\n  beforeEach(() => {\n    // Set body margin to 0 during tests so it doesn't mess up position calculations.\n    originalBodyMargin = document.body.style.margin;\n    document.body.style.margin = '0';\n  });\n\n  afterEach(() => {\n    document.body.style.margin = originalBodyMargin;\n  });\n\n  beforeEach(inject([TestComponentBuilder], (tcb: TestComponentBuilder) => {\n    builder = tcb;\n  }));\n\n  describe('basic ripple', () => {\n    beforeEach(async(() => {\n      builder.createAsync(BasicRippleContainer).then(f => {\n        fixture = f;\n        fixture.detectChanges();\n\n        rippleElement = fixture.debugElement.nativeElement.querySelector('[md-ripple]');\n        rippleBackground = rippleElement.querySelector('.md-ripple-background');\n        expect(rippleBackground).toBeTruthy();\n      });\n    }));\n\n    it('shows background when parent receives mousedown event', () => {\n      expect(rippleBackground.classList).not.toContain('md-ripple-active');\n      const mouseDown = createMouseEvent('mousedown');\n      // mousedown on the ripple element activates the background ripple.\n      rippleElement.dispatchEvent(mouseDown);\n      expect(rippleBackground.classList).toContain('md-ripple-active');\n      // mouseleave on the container removes the background ripple.\n      const mouseLeave = createMouseEvent('mouseleave');\n      rippleElement.dispatchEvent(mouseLeave);\n      expect(rippleBackground.classList).not.toContain('md-ripple-active');\n    });\n\n    it('creates foreground ripples on click', () => {\n      rippleElement.click();\n      expect(rippleElement.querySelectorAll('.md-ripple-foreground').length).toBe(1);\n      // Second click should create another ripple.\n      rippleElement.click();\n      const ripples = rippleElement.querySelectorAll('.md-ripple-foreground');\n      expect(ripples.length).toBe(2);\n      expect(ripples[0].classList).toContain('md-ripple-fade-in');\n      expect(ripples[1].classList).toContain('md-ripple-fade-in');\n      // Signal the end of the first ripple's expansion. The second ripple should be unaffected.\n      const opacityTransitionEnd = createTransitionEndEvent('opacity');\n      ripples[0].dispatchEvent(opacityTransitionEnd);\n      expect(ripples[0].classList).not.toContain('md-ripple-fade-in');\n      expect(ripples[0].classList).toContain('md-ripple-fade-out');\n      expect(ripples[1].classList).toContain('md-ripple-fade-in');\n      expect(ripples[1].classList).not.toContain('md-ripple-fade-out');\n      // Signal the end of the first ripple's fade out. The ripple should be removed from the DOM.\n      ripples[0].dispatchEvent(opacityTransitionEnd);\n      expect(rippleElement.querySelectorAll('.md-ripple-foreground').length).toBe(1);\n      expect(rippleElement.querySelectorAll('.md-ripple-foreground')[0]).toBe(ripples[1]);\n      // Finish the second ripple.\n      ripples[1].dispatchEvent(opacityTransitionEnd);\n      expect(ripples[1].classList).not.toContain('md-ripple-fade-in');\n      expect(ripples[1].classList).toContain('md-ripple-fade-out');\n      ripples[1].dispatchEvent(opacityTransitionEnd);\n      expect(rippleElement.querySelectorAll('.md-ripple-foreground').length).toBe(0);\n    });\n\n    it('creates ripples when manually triggered', () => {\n      const rippleComponent = fixture.debugElement.componentInstance.ripple;\n      // start() should show the background, but no foreground ripple yet.\n      rippleComponent.start();\n      expect(rippleBackground.classList).toContain('md-ripple-active');\n      expect(rippleElement.querySelectorAll('.md-ripple-foreground').length).toBe(0);\n      // end() should deactivate the background and show the foreground ripple.\n      rippleComponent.end(0, 0);\n      expect(rippleBackground.classList).not.toContain('md-ripple-active');\n      expect(rippleElement.querySelectorAll('.md-ripple-foreground').length).toBe(1);\n    });\n\n    it('sizes ripple to cover element', () => {\n      // Click the ripple element 50 px to the right and 75px down from its upper left.\n      const elementRect = rippleElement.getBoundingClientRect();\n      const clickEvent = createMouseEvent('click',\n          {clientX: elementRect.left + 50, clientY: elementRect.top + 75});\n      rippleElement.dispatchEvent(clickEvent);\n      // At this point the foreground ripple should be created with a div centered at the click\n      // location, and large enough to reach the furthest corner, which is 250px to the right\n      // and 125px down relative to the click position.\n      const expectedRadius = Math.sqrt(250 * 250 + 125 * 125);\n      const expectedLeft = elementRect.left + 50 - expectedRadius;\n      const expectedTop = elementRect.top + 75 - expectedRadius;\n      const ripple = <HTMLElement>rippleElement.querySelector('.md-ripple-foreground');\n      // Note: getBoundingClientRect won't work because there's a transform applied to make the\n      // ripple start out tiny.\n      expect(pxStringToFloat(ripple.style.left)).toBeCloseTo(expectedLeft, 1);\n      expect(pxStringToFloat(ripple.style.top)).toBeCloseTo(expectedTop, 1);\n      expect(pxStringToFloat(ripple.style.width)).toBeCloseTo(2 * expectedRadius, 1);\n      expect(pxStringToFloat(ripple.style.height)).toBeCloseTo(2 * expectedRadius, 1);\n    });\n\n    it('expands ripple from center on click event triggered by keyboard', () => {\n      const elementRect = rippleElement.getBoundingClientRect();\n      // Simulate a keyboard-triggered click by setting event coordinates to 0.\n      const clickEvent = createMouseEvent('click',\n          {clientX: 0, clientY: 0, screenX: 0, screenY: 0});\n      rippleElement.dispatchEvent(clickEvent);\n      // The foreground ripple should be centered in the middle of the bounding rect, and large\n      // enough to reach the corners, which are all 150px horizontally and 100px vertically away.\n      const expectedRadius = Math.sqrt(150 * 150 + 100 * 100);\n      const expectedLeft = elementRect.left + (elementRect.width / 2) - expectedRadius;\n      const expectedTop = elementRect.top + (elementRect.height / 2) - expectedRadius;\n      // Note: getBoundingClientRect won't work because there's a transform applied to make the\n      // ripple start out tiny.\n      const ripple = <HTMLElement>rippleElement.querySelector('.md-ripple-foreground');\n      expect(pxStringToFloat(ripple.style.left)).toBeCloseTo(expectedLeft, 1);\n      expect(pxStringToFloat(ripple.style.top)).toBeCloseTo(expectedTop, 1);\n      expect(pxStringToFloat(ripple.style.width)).toBeCloseTo(2 * expectedRadius, 1);\n      expect(pxStringToFloat(ripple.style.height)).toBeCloseTo(2 * expectedRadius, 1);\n    });\n  });\n\n  describe('configuring behavior', () => {\n    let controller: RippleContainerWithInputBindings;\n    let rippleComponent: MdRipple;\n\n    beforeEach(async(() => {\n      builder.createAsync(RippleContainerWithInputBindings).then(f => {\n        fixture = f;\n        fixture.detectChanges();\n\n        controller = fixture.debugElement.componentInstance;\n        rippleComponent = controller.ripple;\n        rippleElement = fixture.debugElement.nativeElement.querySelector('[md-ripple]');\n        rippleBackground = rippleElement.querySelector('.md-ripple-background');\n        expect(rippleBackground).toBeTruthy();\n      });\n    }));\n\n    it('sets ripple background color', () => {\n      // This depends on the exact color format that getComputedStyle returns; for example, alpha\n      // values are quantized to increments of 1/255, so 0.1 becomes 0.0980392. 0.2 is ok.\n      const color = 'rgba(22, 44, 66, 0.8)';\n      controller.backgroundColor = color;\n      fixture.detectChanges();\n      rippleComponent.start();\n      expect(window.getComputedStyle(rippleBackground).backgroundColor).toBe(color);\n    });\n\n    it('sets ripple foreground color', () => {\n      const color = 'rgba(12, 34, 56, 0.8)';\n      controller.color = color;\n      fixture.detectChanges();\n      rippleElement.click();\n      const ripple = rippleElement.querySelector('.md-ripple-foreground');\n      expect(window.getComputedStyle(ripple).backgroundColor).toBe(color);\n    });\n\n    it('does not respond to events when disabled input is set', () => {\n      controller.disabled = true;\n      fixture.detectChanges();\n      const mouseDown = createMouseEvent('mousedown');\n      // The background ripple should not respond to mouseDown, and no foreground ripple should be\n      // created on a click.\n      rippleElement.dispatchEvent(mouseDown);\n      expect(rippleBackground.classList).not.toContain('md-ripple-active');\n      rippleElement.click();\n      expect(rippleElement.querySelectorAll('.md-ripple-foreground').length).toBe(0);\n      // Calling start() and end() should still create a ripple.\n      rippleComponent.start();\n      expect(rippleBackground.classList).toContain('md-ripple-active');\n      rippleComponent.end(0, 0);\n      expect(rippleElement.querySelectorAll('.md-ripple-foreground').length).toBe(1);\n    });\n\n    it('allows specifying custom trigger element', () => {\n      // Events on the other div don't do anything by default.\n      const alternateTrigger =\n          <HTMLElement>fixture.debugElement.nativeElement.querySelector('.alternateTrigger');\n      const mouseDown = createMouseEvent('mousedown');\n      alternateTrigger.dispatchEvent(mouseDown);\n      expect(rippleBackground.classList).not.toContain('md-ripple-active');\n      alternateTrigger.click();\n      expect(rippleElement.querySelectorAll('.md-ripple-foreground').length).toBe(0);\n\n      // Reassign the trigger element, and now events should create ripples.\n      controller.trigger = alternateTrigger;\n      fixture.detectChanges();\n      alternateTrigger.dispatchEvent(mouseDown);\n      expect(rippleBackground.classList).toContain('md-ripple-active');\n      alternateTrigger.click();\n      expect(rippleElement.querySelectorAll('.md-ripple-foreground').length).toBe(1);\n    });\n\n    it('expands ripple from center if centered input is set', () => {\n      controller.centered = true;\n      fixture.detectChanges();\n      // Click the ripple element 50 px to the right and 75px down from its upper left.\n      const elementRect = rippleElement.getBoundingClientRect();\n      const clickEvent = createMouseEvent('click',\n          {clientX: elementRect.left + 50, clientY: elementRect.top + 75});\n      rippleElement.dispatchEvent(clickEvent);\n      // Because the centered input is true, the center of the ripple should be the midpoint of the\n      // bounding rect. The ripple should expand to cover the rect corners, which are 150px\n      // horizontally and 100px vertically from the midpoint.\n      const expectedRadius = Math.sqrt(150 * 150 + 100 * 100);\n      const expectedLeft = elementRect.left + (elementRect.width / 2) - expectedRadius;\n      const expectedTop = elementRect.top + (elementRect.height / 2) - expectedRadius;\n\n      const ripple = <HTMLElement>rippleElement.querySelector('.md-ripple-foreground');\n      expect(pxStringToFloat(ripple.style.left)).toBeCloseTo(expectedLeft, 1);\n      expect(pxStringToFloat(ripple.style.top)).toBeCloseTo(expectedTop, 1);\n      expect(pxStringToFloat(ripple.style.width)).toBeCloseTo(2 * expectedRadius, 1);\n      expect(pxStringToFloat(ripple.style.height)).toBeCloseTo(2 * expectedRadius, 1);\n    });\n\n    it('uses custom radius if set', () => {\n      const customRadius = 42;\n      controller.maxRadius = customRadius;\n      fixture.detectChanges();\n      // Click the ripple element 50 px to the right and 75px down from its upper left.\n      const elementRect = rippleElement.getBoundingClientRect();\n      const clickEvent = createMouseEvent('click',\n          {clientX: elementRect.left + 50, clientY: elementRect.top + 75});\n      rippleElement.dispatchEvent(clickEvent);\n      const expectedLeft = elementRect.left + 50 - customRadius;\n      const expectedTop = elementRect.top + 75 - customRadius;\n\n      const ripple = <HTMLElement>rippleElement.querySelector('.md-ripple-foreground');\n      expect(pxStringToFloat(ripple.style.left)).toBeCloseTo(expectedLeft, 1);\n      expect(pxStringToFloat(ripple.style.top)).toBeCloseTo(expectedTop, 1);\n      expect(pxStringToFloat(ripple.style.width)).toBeCloseTo(2 * customRadius, 1);\n      expect(pxStringToFloat(ripple.style.height)).toBeCloseTo(2 * customRadius, 1);\n    });\n  });\n});\n\n@Component({\n  directives: [MdRipple],\n  template: `\n    <div id=\"container\" md-ripple style=\"position: relative; width:300px; height:200px;\">\n    </div>\n  `,\n})\nclass BasicRippleContainer {\n  @ViewChild(MdRipple) ripple: MdRipple;\n}\n\n@Component({\n  directives: [MdRipple],\n  template: `\n    <div id=\"container\" style=\"position: relative; width:300px; height:200px;\"\n      md-ripple\n      [md-ripple-trigger]=\"trigger\"\n      [md-ripple-centered]=\"centered\"\n      [md-ripple-max-radius]=\"maxRadius\"\n      [md-ripple-disabled]=\"disabled\"\n      [md-ripple-color]=\"color\"\n      [md-ripple-background-color]=\"backgroundColor\">\n    </div>\n    <div class=\"alternateTrigger\"></div>\n  `,\n})\nclass RippleContainerWithInputBindings {\n  trigger: HTMLElement = null;\n  centered = false;\n  disabled = false;\n  maxRadius = 0;\n  color = '';\n  backgroundColor = '';\n  @ViewChild(MdRipple) ripple: MdRipple;\n}\n"]}