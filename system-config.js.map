{"version":3,"file":"system-config.js","sourceRoot":"","sources":["Users/arturkania/Documents/azimo/playground/material2/tmp/broccoli_type_script_compiler-input_base_path-1v2UHKuC.tmp/0/src/demo-app/system-config.ts"],"names":[],"mappings":"AAAA;;gGAEgG;AAEhG,IAAM,UAAU,GAAG;IACjB,QAAQ;IACR,MAAM;IACN,UAAU;IACV,QAAQ;IACR,WAAW;IACX,MAAM;IACN,OAAO;IACP,MAAM;IACN,MAAM;IACN,cAAc;IACd,iBAAiB;IACjB,OAAO;IACP,SAAS;IACT,QAAQ;IACR,cAAc;IACd,eAAe;IACf,MAAM;IACN,SAAS;IACT,SAAS;CACV,CAAC;AAEF,kCAAkC;AAClC,IAAM,GAAG,GAAQ;IACf,yBAAyB,EAAE,MAAM;CAClC,CAAC;AACF,UAAU,CAAC,OAAO,CAAC,UAAA,IAAI,IAAI,OAAA,GAAG,CAAC,yBAAsB,IAAI,CAAE,CAAC,GAAG,gBAAc,IAAM,EAAxD,CAAwD,CAAC,CAAC;AAGrF,mCAAmC;AACnC,IAAM,QAAQ,GAAQ;IACpB,yBAAyB,EAAE;QACzB,MAAM,EAAE,KAAK;QACb,gBAAgB,EAAE,IAAI;KACvB;IACD,uFAAuF;IACvF,uEAAuE;IACvE,GAAG,EAAE;QACH,gBAAgB,EAAE,IAAI;KACvB;CACF,CAAC;AACF,UAAU,CAAC,OAAO,CAAC,UAAA,IAAI;IACrB,QAAQ,CAAC,yBAAsB,IAAI,CAAE,CAAC,GAAG;QACvC,MAAM,EAAE,KAAK;QACb,gBAAgB,EAAE,IAAI;KACvB,CAAC;AACJ,CAAC,CAAC,CAAC;AAGH,gGAAgG;AAChG;;gGAEgG;AAChG,IAAM,OAAO,GAAa;IACxB,4BAA4B;IAC5B,eAAe;IACf,iBAAiB;IACjB,mBAAmB;IACnB,eAAe;IACf,gBAAgB;IAChB,iBAAiB;IACjB,2BAA2B;IAC3B,mCAAmC;IAEnC,sBAAsB;IACtB,MAAM;IAEN,wBAAwB;IACxB,UAAU;IACV,eAAe;IACf,UAAU;IACV,gBAAgB;IAChB,QAAQ;IACR,SAAS;SACN,UAAU,CAEd,CAAC;AAEF,IAAM,gBAAgB,GAAG,EAAE,CAAC;AAC5B,OAAO,CAAC,OAAO,CAAC,UAAC,UAAkB;IAC1B,gBAAiB,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;AAC3D,CAAC,CAAC,CAAC;AAKH,wCAAwC;AACxC,MAAM,CAAC,MAAM,CAAC;IACZ,GAAG,EAAE;QACH,UAAU,EAAE,iBAAiB;QAC7B,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE,SAAS;KAClB;IACD,QAAQ,EAAE,gBAAgB;CAC3B,CAAC,CAAC;AAEH,kCAAkC;AAClC,MAAM,CAAC,MAAM,CAAC,EAAE,KAAA,GAAG,EAAE,UAAA,QAAQ,EAAE,CAAC,CAAC","sourcesContent":["/***********************************************************************************************\n * User Configuration.\n **********************************************************************************************/\n\nconst components = [\n  'button',\n  'card',\n  'checkbox',\n  'dialog',\n  'grid-list',\n  'icon',\n  'input',\n  'list',\n  'menu',\n  'progress-bar',\n  'progress-circle',\n  'radio',\n  'sidenav',\n  'slider',\n  'slide-toggle',\n  'button-toggle',\n  'tabs',\n  'toolbar',\n  'tooltip',\n];\n\n/** Map relative paths to URLs. */\nconst map: any = {\n  '@angular2-material/core': 'core',\n};\ncomponents.forEach(name => map[`@angular2-material/${name}`] = `components/${name}`);\n\n\n/** User packages configuration. */\nconst packages: any = {\n  '@angular2-material/core': {\n    format: 'cjs',\n    defaultExtension: 'js'\n  },\n  // Set the default extension for the root package, because otherwise the demo-app can't\n  // be built within the production mode. Due to missing file extensions.\n  '.': {\n    defaultExtension: 'js'\n  }\n};\ncomponents.forEach(name => {\n  packages[`@angular2-material/${name}`] = {\n    format: 'cjs',\n    defaultExtension: 'js'\n  };\n});\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////\n/***********************************************************************************************\n * Everything underneath this line is managed by the CLI.\n **********************************************************************************************/\nconst barrels: string[] = [\n  // Angular specific barrels.\n  '@angular/core',\n  '@angular/common',\n  '@angular/compiler',\n  '@angular/http',\n  '@angular/forms',\n  '@angular/router',\n  '@angular/platform-browser',\n  '@angular/platform-browser-dynamic',\n\n  // Thirdparty barrels.\n  'rxjs',\n\n  // App specific barrels.\n  'demo-app',\n  'button-toggle',\n  'gestures',\n  'live-announcer',\n  'portal',\n  'overlay',\n  ...components\n  /** @cli-barrel */\n];\n\nconst _cliSystemConfig = {};\nbarrels.forEach((barrelName: string) => {\n  (<any> _cliSystemConfig)[barrelName] = { main: 'index' };\n});\n\n/** Type declaration for ambient System. */\ndeclare var System: any;\n\n// Apply the CLI SystemJS configuration.\nSystem.config({\n  map: {\n    '@angular': 'vendor/@angular',\n    'rxjs': 'vendor/rxjs',\n    'main': 'main.js'\n  },\n  packages: _cliSystemConfig\n});\n\n// Apply the user's configuration.\nSystem.config({ map, packages });\n"]}