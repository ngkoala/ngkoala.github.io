{"version":3,"file":"checkbox-demo.js","sourceRoot":"","sources":["../Users/arturkania/Documents/azimo/playground/material2/tmp/broccoli_type_script_compiler-input_base_path-1v2UHKuC.tmp/0/src/demo-app/checkbox/checkbox-demo.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component} from '@angular/core';\nimport {NgFor} from '@angular/common';\nimport {FORM_DIRECTIVES} from '@angular/forms';\nimport {MdCheckbox} from '@angular2-material/checkbox/checkbox';\n\nexport interface Task {\n  name: string;\n  completed: boolean;\n  subtasks?: Task[];\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'md-checkbox-demo-nested-checklist',\n  styles: [`\n    li {\n      margin-bottom: 4px;\n    }\n  `],\n  templateUrl: 'nested-checklist.html',\n  directives: [MdCheckbox, NgFor]\n})\nexport class MdCheckboxDemoNestedChecklist {\n  tasks: Task[] = [\n    {\n      name: 'Reminders',\n      completed: false,\n      subtasks: [\n        { name: 'Cook Dinner', completed: false },\n        { name: 'Read the Material Design Spec', completed: false },\n        { name: 'Upgrade Application to Angular2', completed: false }\n      ]\n    },\n    {\n      name: 'Groceries',\n      completed: false,\n      subtasks: [\n        { name: 'Organic Eggs', completed: false },\n        { name: 'Protein Powder', completed: false },\n        { name: 'Almond Meal Flour', completed: false }\n      ]\n    }\n  ];\n\n  allComplete(task: Task): boolean {\n    let subtasks = task.subtasks;\n    return subtasks.every(t => t.completed) ? true\n        : subtasks.every(t => !t.completed) ? false\n        : task.completed;\n  }\n\n  someComplete(tasks: Task[]): boolean {\n    const numComplete = tasks.filter(t => t.completed).length;\n    return numComplete > 0 && numComplete < tasks.length;\n  }\n\n  setAllCompleted(tasks: Task[], completed: boolean) {\n    tasks.forEach(t => t.completed = completed);\n  }\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'md-checkbox-demo',\n  templateUrl: 'checkbox-demo.html',\n  styleUrls: ['checkbox-demo.css'],\n  directives: [MdCheckbox, MdCheckboxDemoNestedChecklist, FORM_DIRECTIVES]\n})\nexport class CheckboxDemo {\n  isIndeterminate: boolean = false;\n  isChecked: boolean = false;\n  isDisabled: boolean = false;\n  alignment: string = 'start';\n\n  printResult() {\n    if (this.isIndeterminate) {\n      return 'Maybe!';\n    }\n    return this.isChecked ? 'Yes!' : 'No!';\n  }\n}\n"]}