{"version":3,"file":"grid-list.spec.js","sourceRoot":"","sources":["../../Users/arturkania/Documents/azimo/playground/material2/tmp/broccoli_type_script_compiler-input_base_path-VicCFYVt.tmp/0/src/demo-app/components/grid-list/grid-list.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {inject, async} from '@angular/core/testing';\nimport {TestComponentBuilder} from '@angular/compiler/testing';\nimport {Component, DebugElement} from '@angular/core';\nimport {By} from '@angular/platform-browser';\n\nimport {MD_GRID_LIST_DIRECTIVES, MdGridList} from './grid-list';\nimport {MdGridTile, MdGridTileText} from './grid-tile';\n\ndescribe('MdGridList', () => {\n  let builder: TestComponentBuilder;\n\n  beforeEach(inject([TestComponentBuilder], (tcb: TestComponentBuilder) => {\n    builder = tcb;\n  }));\n\n  it('should throw error if cols is not defined', async(() => {\n    var template = `<md-grid-list></md-grid-list>`;\n      builder.overrideTemplate(TestGridList, template).createAsync(TestGridList).then(fixture => {\n        expect(() => {\n          fixture.detectChanges();\n        }).toThrowError(/must pass in number of columns/);\n      });\n  }));\n\n  it('should throw error if rowHeight ratio is invalid', async(() => {\n    var template = `<md-grid-list cols=\"4\" rowHeight=\"4:3:2\"></md-grid-list>`;\n\n    builder.overrideTemplate(TestGridList, template).createAsync(TestGridList).then(fixture => {\n      expect(() => {\n        fixture.detectChanges();\n      }).toThrowError(/invalid ratio given for row-height/);\n    });\n  }));\n\n  it('should throw error if tile colspan is wider than total cols', async(() => {\n    var template = `\n      <md-grid-list cols=\"4\">\n        <md-grid-tile colspan=\"5\"></md-grid-tile>\n      </md-grid-list>`;\n\n    builder.overrideTemplate(TestGridList, template).createAsync(TestGridList).then(fixture => {\n      expect(() => {\n        fixture.detectChanges();\n      }).toThrowError(/tile with colspan 5 is wider than grid/);\n    });\n  }));\n\n  it('should default to 1:1 row height if undefined ', async(() => {\n    var template = `\n      <div style=\"width:200px\">\n        <md-grid-list cols=\"1\">\n          <md-grid-tile></md-grid-tile>\n        </md-grid-list>\n      </div>`;\n\n    builder.overrideTemplate(TestGridList, template).createAsync(TestGridList).then(fixture => {\n      fixture.detectChanges();\n      let tile = fixture.debugElement.query(By.directive(MdGridTile));\n\n      // in ratio mode, heights are set using the padding-top property\n      expect(getProp(tile, 'padding-top')).toBe('200px');\n    });\n  }));\n\n  it('should use a ratio row height if passed in', async(() => {\n    var template = `\n      <div style=\"width:400px\">\n        <md-grid-list cols=\"1\" [rowHeight]=\"height\">\n          <md-grid-tile></md-grid-tile>\n        </md-grid-list>\n      </div>`;\n\n    builder.overrideTemplate(TestGridList, template).createAsync(TestGridList).then(fixture => {\n      fixture.componentInstance.height = '4:1';\n      fixture.detectChanges();\n\n      let tile = fixture.debugElement.query(By.directive(MdGridTile));\n      expect(getProp(tile, 'padding-top')).toBe('100px');\n\n      fixture.componentInstance.height = '2:1';\n      fixture.detectChanges();\n\n      expect(getProp(tile, 'padding-top')).toBe('200px');\n    });\n  }));\n\n  it('should divide row height evenly in \"fit\" mode', async(() => {\n    var template = `\n      <md-grid-list cols=\"1\" rowHeight=\"fit\" [style.height]=\"height\">\n        <md-grid-tile></md-grid-tile>\n        <md-grid-tile></md-grid-tile>\n      </md-grid-list>`;\n\n    builder.overrideTemplate(TestGridList, template).createAsync(TestGridList).then(fixture => {\n      fixture.componentInstance.height = '300px';\n      fixture.detectChanges();\n      let tile = fixture.debugElement.query(By.directive(MdGridTile));\n\n      // 149.5 * 2 = 299px + 1px gutter = 300px\n      expect(getProp(tile, 'height')).toBe('149.5px');\n\n      fixture.componentInstance.height = '200px';\n      fixture.detectChanges();\n\n      // 99.5 * 2 = 199px + 1px gutter = 200px\n      expect(getProp(tile, 'height')).toBe('99.5px');\n    });\n  }));\n\n  it('should use the fixed row height if passed in', async(() => {\n    var template = `\n      <md-grid-list cols=\"4\" [rowHeight]=\"height\">\n        <md-grid-tile></md-grid-tile>\n      </md-grid-list>`;\n\n    builder.overrideTemplate(TestGridList, template).createAsync(TestGridList).then(fixture => {\n      fixture.componentInstance.height = '100px';\n      fixture.detectChanges();\n\n      let tile = fixture.debugElement.query(By.directive(MdGridTile));\n      expect(getProp(tile, 'height')).toBe('100px');\n\n      fixture.componentInstance.height = '200px';\n      fixture.detectChanges();\n\n      expect(getProp(tile, 'height')).toBe('200px');\n    });\n  }));\n\n  it('should default to pixels if row height units are missing', async(() => {\n    var template = `\n      <md-grid-list cols=\"4\" rowHeight=\"100\">\n        <md-grid-tile></md-grid-tile>\n      </md-grid-list>`;\n\n    builder.overrideTemplate(TestGridList, template).createAsync(TestGridList).then(fixture => {\n      fixture.detectChanges();\n\n      fixture.whenStable().then(() => {\n        let tile = fixture.debugElement.query(By.directive(MdGridTile));\n        expect(getProp(tile, 'height')).toBe('100px');\n      });\n    });\n  }));\n\n  it('should default gutter size to 1px', async(() => {\n    var template = `\n      <div style=\"width:200px\">\n        <md-grid-list cols=\"2\" rowHeight=\"100px\">\n          <md-grid-tile></md-grid-tile>\n          <md-grid-tile></md-grid-tile>\n          <md-grid-tile></md-grid-tile>\n        </md-grid-list>\n      </div>`;\n\n    builder.overrideTemplate(TestGridList, template).createAsync(TestGridList).then(fixture => {\n      fixture.detectChanges();\n      fixture.whenStable().then(() => {\n        let tiles = fixture.debugElement.queryAll(By.css('md-grid-tile'));\n\n        // check horizontal gutter\n        expect(getProp(tiles[0], 'width')).toBe('99.5px');\n        expect(getComputedLeft(tiles[1])).toBe(100.5);\n\n        // check vertical gutter\n        expect(getProp(tiles[0], 'height')).toBe('100px');\n        expect(getProp(tiles[2], 'top')).toBe('101px');\n      });\n    });\n  }));\n\n  it('should set the gutter size if passed', async(() => {\n    var template = `\n      <div style=\"width:200px\">\n        <md-grid-list cols=\"2\" gutterSize=\"2px\" rowHeight=\"100px\">\n          <md-grid-tile></md-grid-tile>\n          <md-grid-tile></md-grid-tile>\n          <md-grid-tile></md-grid-tile>\n        </md-grid-list>\n      </div>`;\n\n    builder.overrideTemplate(TestGridList, template).createAsync(TestGridList).then(fixture => {\n      fixture.detectChanges();\n      fixture.whenStable().then(() => {\n        let tiles = fixture.debugElement.queryAll(By.css('md-grid-tile'));\n\n        // check horizontal gutter\n        expect(getProp(tiles[0], 'width')).toBe('99px');\n        expect(getComputedLeft(tiles[1])).toBe(101);\n\n        // check vertical gutter\n        expect(getProp(tiles[0], 'height')).toBe('100px');\n        expect(getProp(tiles[2], 'top')).toBe('102px');\n      });\n    });\n  }));\n\n  it('should use pixels if gutter units are missing', async(() => {\n    var template = `\n      <div style=\"width:200px\">\n        <md-grid-list cols=\"2\" gutterSize=\"2\" rowHeight=\"100px\">\n          <md-grid-tile></md-grid-tile>\n          <md-grid-tile></md-grid-tile>\n          <md-grid-tile></md-grid-tile>\n        </md-grid-list>\n      </div>`;\n\n    builder.overrideTemplate(TestGridList, template).createAsync(TestGridList).then(fixture => {\n      fixture.detectChanges();\n      fixture.whenStable().then(() => {\n        let tiles = fixture.debugElement.queryAll(By.css('md-grid-tile'));\n\n        // check horizontal gutter\n        expect(getProp(tiles[0], 'width')).toBe('99px');\n        expect(getComputedLeft(tiles[1])).toBe(101);\n\n        // check vertical gutter\n        expect(getProp(tiles[0], 'height')).toBe('100px');\n        expect(getProp(tiles[2], 'top')).toBe('102px');\n      });\n    });\n  }));\n\n  it('should set the correct list height in ratio mode', async(() => {\n    var template = `\n      <div style=\"width:400px\">\n        <md-grid-list cols=\"1\" rowHeight=\"4:1\">\n          <md-grid-tile></md-grid-tile>\n          <md-grid-tile></md-grid-tile>\n        </md-grid-list>\n      </div>\n    `;\n\n    builder.overrideTemplate(TestGridList, template).createAsync(TestGridList).then(fixture => {\n      fixture.detectChanges();\n      let list = fixture.debugElement.query(By.directive(MdGridList));\n      expect(getProp(list, 'padding-bottom')).toBe('201px');\n    });\n  }));\n\n  it('should set the correct list height in fixed mode', async(() => {\n    var template = `\n      <md-grid-list cols=\"1\" rowHeight=\"100px\">\n        <md-grid-tile></md-grid-tile>\n        <md-grid-tile></md-grid-tile>\n      </md-grid-list>`;\n\n    builder.overrideTemplate(TestGridList, template).createAsync(TestGridList).then(fixture => {\n      fixture.detectChanges();\n      let list = fixture.debugElement.query(By.directive(MdGridList));\n      expect(getProp(list, 'height')).toBe('201px');\n    });\n  }));\n\n  it('should allow adjustment of tile colspan', async(() => {\n    var template = `\n      <div style=\"width:400px\">\n        <md-grid-list cols=\"4\">\n          <md-grid-tile [colspan]=\"colspan\"></md-grid-tile>\n        </md-grid-list>\n      </div>`;\n\n    builder.overrideTemplate(TestGridList, template).createAsync(TestGridList).then(fixture => {\n      fixture.componentInstance.colspan = 2;\n      fixture.detectChanges();\n\n      let tile = fixture.debugElement.query(By.directive(MdGridTile));\n      expect(getProp(tile, 'width')).toBe('199.5px');\n\n      fixture.componentInstance.colspan = 3;\n      fixture.detectChanges();\n      expect(getProp(tile, 'width')).toBe('299.75px');\n    });\n  }));\n\n  it('should allow adjustment of tile rowspan', async(() => {\n    var template = `\n      <md-grid-list cols=\"1\" rowHeight=\"100px\">\n        <md-grid-tile [rowspan]=\"rowspan\"></md-grid-tile>\n      </md-grid-list>`;\n\n    builder.overrideTemplate(TestGridList, template).createAsync(TestGridList).then(fixture => {\n      fixture.componentInstance.rowspan = 2;\n      fixture.detectChanges();\n\n      let tile = fixture.debugElement.query(By.directive(MdGridTile));\n      expect(getProp(tile, 'height')).toBe('201px');\n\n      fixture.componentInstance.rowspan = 3;\n      fixture.detectChanges();\n      expect(getProp(tile, 'height')).toBe('302px');\n    });\n  }));\n\n  it('should lay out tiles correctly for a complex layout', async(() => {\n    var template = `\n      <div style=\"width:400px\">\n        <md-grid-list cols=\"4\" rowHeight=\"100px\">\n          <md-grid-tile *ngFor=\"let tile of tiles\" [colspan]=\"tile.cols\" [rowspan]=\"tile.rows\"\n                        [style.background]=\"tile.color\">\n            {{tile.text}}\n          </md-grid-tile>\n        </md-grid-list>\n      </div>`;\n\n    builder.overrideTemplate(TestGridList, template).createAsync(TestGridList).then(fixture => {\n      fixture.componentInstance.tiles = [\n        {cols: 3, rows: 1},\n        {cols: 1, rows: 2},\n        {cols: 1, rows: 1},\n        {cols: 2, rows: 1}\n      ];\n\n      fixture.detectChanges();\n      fixture.whenStable().then(() => {\n        let tiles = fixture.debugElement.queryAll(By.css('md-grid-tile'));\n\n        expect(getProp(tiles[0], 'width')).toBe('299.75px');\n        expect(getProp(tiles[0], 'height')).toBe('100px');\n        expect(getComputedLeft(tiles[0])).toBe(0);\n        expect(getProp(tiles[0], 'top')).toBe('0px');\n\n        expect(getProp(tiles[1], 'width')).toBe('99.25px');\n        expect(getProp(tiles[1], 'height')).toBe('201px');\n        expect(getComputedLeft(tiles[1])).toBe(300.75);\n        expect(getProp(tiles[1], 'top')).toBe('0px');\n\n        expect(getProp(tiles[2], 'width')).toBe('99.25px');\n        expect(getProp(tiles[2], 'height')).toBe('100px');\n        expect(getComputedLeft(tiles[2])).toBe(0);\n        expect(getProp(tiles[2], 'top')).toBe('101px');\n\n        expect(getProp(tiles[3], 'width')).toBe('199.5px');\n        expect(getProp(tiles[3], 'height')).toBe('100px');\n        expect(getComputedLeft(tiles[3])).toBe(100.25);\n        expect(getProp(tiles[3], 'top')).toBe('101px');\n      });\n    });\n  }));\n\n  it('should add not add any classes to footers without lines', async(() => {\n    var template = `\n      <md-grid-list cols=\"1\">\n        <md-grid-tile>\n          <md-grid-tile-footer>\n            I'm a footer!\n          </md-grid-tile-footer>\n        </md-grid-tile>\n      </md-grid-list>`;\n\n    builder.overrideTemplate(TestGridList, template).createAsync(TestGridList).then(fixture => {\n      fixture.detectChanges();\n\n      let footer = fixture.debugElement.query(By.directive(MdGridTileText));\n      expect(footer.nativeElement.classList.contains('md-2-line')).toBe(false);\n    });\n  }));\n\n  it('should add class to footers with two lines', async(() => {\n    var template = `\n      <md-grid-list cols=\"1\">\n        <md-grid-tile>\n          <md-grid-tile-footer>\n            <h3 md-line>First line</h3>\n            <span md-line>Second line</span>\n          </md-grid-tile-footer>\n        </md-grid-tile>\n      </md-grid-list>`;\n\n    builder.overrideTemplate(TestGridList, template).createAsync(TestGridList).then(fixture => {\n      fixture.detectChanges();\n\n      let footer = fixture.debugElement.query(By.directive(MdGridTileText));\n      expect(footer.nativeElement.classList.contains('md-2-line')).toBe(true);\n    });\n  }));\n\n});\n\n@Component({\n  selector: 'test-grid-list',\n  template: ``,\n  directives: [MD_GRID_LIST_DIRECTIVES]\n})\nclass TestGridList {\n  tiles: any[];\n  height: string | number;\n  colspan: number;\n  rowspan: number;\n}\n\nfunction getProp(el: DebugElement, prop: string): string {\n  return getComputedStyle(el.nativeElement).getPropertyValue(prop);\n}\n\n/** Gets the `left` position of an element. */\nfunction getComputedLeft(element: DebugElement): number {\n  // While the other properties in this test use `getComputedStyle`, we use `getBoundingClientRect`\n  // for left because iOS Safari doesn't support using `getComputedStyle` to get the calculated\n  // `left` balue when using CSS `calc`. We subtract the `left` of the document body because\n  // browsers, by default, add a margin to the body (typically 8px).\n  let elementRect = element.nativeElement.getBoundingClientRect();\n  let bodyRect = document.body.getBoundingClientRect();\n\n  return elementRect.left - bodyRect.left;\n}\n"]}