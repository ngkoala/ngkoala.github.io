{"version":3,"file":"tooltip.spec.js","sourceRoot":"","sources":["../../Users/arturkania/Documents/azimo/playground/material2/tmp/broccoli_type_script_compiler-input_base_path-xoMhTQg6.tmp/0/src/demo-app/components/tooltip/tooltip.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    it,\n    describe,\n    expect,\n    beforeEach,\n    inject,\n    async,\n    beforeEachProviders,\n} from '@angular/core/testing';\nimport {TestComponentBuilder, ComponentFixture} from '@angular/compiler/testing';\nimport {Component, DebugElement} from '@angular/core';\nimport {By} from '@angular/platform-browser';\nimport {MD_TOOLTIP_DIRECTIVES, TooltipPosition, MdTooltip} from\n    '@angular2-material/tooltip/tooltip';\nimport {OVERLAY_PROVIDERS} from '@angular2-material/core/overlay/overlay';\nimport {OverlayContainer} from '@angular2-material/core/overlay/overlay-container';\n\ndescribe('MdTooltip', () => {\n  let builder: TestComponentBuilder;\n  let overlayContainerElement: HTMLElement;\n\n  beforeEachProviders(() => [\n    OVERLAY_PROVIDERS,\n    {provide: OverlayContainer, useFactory: () => {\n      return {\n        getContainerElement: () => {\n          overlayContainerElement = document.createElement('div');\n          return overlayContainerElement;\n        }\n      };\n    }},\n  ]);\n\n  beforeEach(inject([TestComponentBuilder], (tcb: TestComponentBuilder) => {\n    builder = tcb;\n  }));\n\n  describe('basic usage', () => {\n    let fixture: ComponentFixture<BasicTooltipDemo>;\n    let buttonDebugElement: DebugElement;\n    let buttonElement: HTMLButtonElement;\n    let tooltipDirective: MdTooltip;\n\n    beforeEach(async(() => {\n      builder.createAsync(BasicTooltipDemo).then(f => {\n        fixture = f;\n        fixture.detectChanges();\n        buttonDebugElement = fixture.debugElement.query(By.css('button'));\n        buttonElement = <HTMLButtonElement> buttonDebugElement.nativeElement;\n        tooltipDirective = buttonDebugElement.injector.get(MdTooltip);\n      });\n    }));\n\n    it('should show/hide on mouse enter/leave', async(() => {\n      expect(tooltipDirective.visible).toBeFalsy();\n\n      tooltipDirective._handleMouseEnter(null);\n      expect(tooltipDirective.visible).toBeTruthy();\n\n      fixture.detectChanges();\n      whenStable([\n        () => {\n          expect(overlayContainerElement.textContent).toBe('some message');\n          tooltipDirective._handleMouseLeave(null);\n        },\n        () => {\n          expect(overlayContainerElement.textContent).toBe('');\n        }\n      ]);\n    }));\n\n    /**\n     * Utility function to make it easier to use multiple `whenStable` checks.\n     * Accepts an array of callbacks, each to wait for stability before running.\n     * TODO: Remove the `setTimeout()` when a viable alternative is available\n     * @param callbacks\n     */\n    function whenStable(callbacks: Array<Function>) {\n      if (callbacks.length) {\n        fixture.detectChanges();\n        fixture.whenStable().then(() => {\n          // TODO(jelbourn): figure out why the test zone is \"stable\" when there are still pending\n          // tasks, such that we have to use `setTimeout` to run the second round of change\n          // detection. Two rounds of change detection are necessary: one to *create* the tooltip,\n          // and another to cause the lifecycle events of the tooltip to run and load the tooltip\n          // content.\n          setTimeout(() => {\n            callbacks[0]();\n            whenStable(callbacks.slice(1));\n          }, 50);\n        });\n      }\n    }\n  });\n});\n\n@Component({\n  selector: 'app',\n  directives: [MD_TOOLTIP_DIRECTIVES],\n  template: `<button md-tooltip=\"some message\" [tooltip-position]=\"position\">Button</button>`\n})\nclass BasicTooltipDemo {\n  position: TooltipPosition = 'below';\n}\n"]}