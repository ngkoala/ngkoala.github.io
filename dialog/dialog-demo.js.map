{"version":3,"file":"dialog-demo.js","sourceRoot":"","sources":["../Users/arturkania/Documents/azimo/playground/material2/tmp/broccoli_type_script_compiler-input_base_path-VicCFYVt.tmp/0/src/demo-app/dialog/dialog-demo.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA0C,eAAe,CAAC,CAAA;AAC1D,uBAAoD,kCAAkC,CAAC,CAAA;AACvF,wBAAgC,yCAAyC,CAAC,CAAA;AAS1E;IAIE,oBACW,MAAgB,EAChB,gBAAkC;QADlC,WAAM,GAAN,MAAM,CAAU;QAChB,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAI,CAAC;IAElD,yBAAI,GAAJ;QAAA,iBAYC;QAXC,IAAI,MAAM,GAAG,IAAI,uBAAc,EAAE,CAAC;QAClC,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAEhD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,UAAA,GAAG;YAC3C,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YAErB,KAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAA,MAAM;gBAC3C,KAAI,CAAC,eAAe,GAAG,MAAM,CAAC;gBAC9B,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACxB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IA3BH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,aAAa;YACvB,WAAW,EAAE,kBAAkB;YAC/B,SAAS,EAAE,CAAC,iBAAiB,CAAC;YAC9B,SAAS,EAAE,CAAC,iBAAQ,EAAE,2BAAiB,CAAC;SACzC,CAAC;;kBAAA;IAsBF,iBAAC;AAAD,CAAC,AArBD,IAqBC;AArBY,kBAAU,aAqBtB,CAAA;AAUD;IACE,oBAAmB,SAAkC;QAAlC,cAAS,GAAT,SAAS,CAAyB;IAAI,CAAC;IAR5D;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,QAAQ,EAAE,uKAG2E;SACtF,CAAC;;kBAAA;IAGF,iBAAC;AAAD,CAAC,AAFD,IAEC;AAFY,kBAAU,aAEtB,CAAA","sourcesContent":["import {Component, ViewContainerRef} from '@angular/core';\nimport {MdDialog, MdDialogConfig, MdDialogRef} from '@angular2-material/dialog/dialog';\nimport {OVERLAY_PROVIDERS} from '@angular2-material/core/overlay/overlay';\n\n@Component({\n  moduleId: module.id,\n  selector: 'dialog-demo',\n  templateUrl: 'dialog-demo.html',\n  styleUrls: ['dialog-demo.css'],\n  providers: [MdDialog, OVERLAY_PROVIDERS]\n})\nexport class DialogDemo {\n  dialogRef: MdDialogRef<JazzDialog>;\n  lastCloseResult: string;\n\n  constructor(\n      public dialog: MdDialog,\n      public viewContainerRef: ViewContainerRef) { }\n\n  open() {\n    let config = new MdDialogConfig();\n    config.viewContainerRef = this.viewContainerRef;\n\n    this.dialog.open(JazzDialog, config).then(ref => {\n      this.dialogRef = ref;\n\n      this.dialogRef.afterClosed().subscribe(result => {\n        this.lastCloseResult = result;\n        this.dialogRef = null;\n      });\n    });\n  }\n}\n\n\n@Component({\n  selector: 'demo-jazz-dialog',\n  template: `\n  <p>It's Jazz!</p>\n  <p><label>How much? <input #howMuch></label></p>\n  <button type=\"button\" (click)=\"dialogRef.close(howMuch.value)\">Close dialog</button>`\n})\nexport class JazzDialog {\n  constructor(public dialogRef: MdDialogRef<JazzDialog>) { }\n}\n"]}